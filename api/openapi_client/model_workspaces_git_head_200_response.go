// Copyright (c) Codesphere Inc.
// SPDX-License-Identifier: Apache-2.0

/*
Codesphere Public API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WorkspacesGitHead200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspacesGitHead200Response{}

// WorkspacesGitHead200Response struct for WorkspacesGitHead200Response
type WorkspacesGitHead200Response struct {
	Head string `json:"head"`
}

type _WorkspacesGitHead200Response WorkspacesGitHead200Response

// NewWorkspacesGitHead200Response instantiates a new WorkspacesGitHead200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspacesGitHead200Response(head string) *WorkspacesGitHead200Response {
	this := WorkspacesGitHead200Response{}
	this.Head = head
	return &this
}

// NewWorkspacesGitHead200ResponseWithDefaults instantiates a new WorkspacesGitHead200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspacesGitHead200ResponseWithDefaults() *WorkspacesGitHead200Response {
	this := WorkspacesGitHead200Response{}
	return &this
}

// GetHead returns the Head field value
func (o *WorkspacesGitHead200Response) GetHead() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Head
}

// GetHeadOk returns a tuple with the Head field value
// and a boolean to check if the value has been set.
func (o *WorkspacesGitHead200Response) GetHeadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Head, true
}

// SetHead sets field value
func (o *WorkspacesGitHead200Response) SetHead(v string) {
	o.Head = v
}

func (o WorkspacesGitHead200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspacesGitHead200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["head"] = o.Head
	return toSerialize, nil
}

func (o *WorkspacesGitHead200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"head",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkspacesGitHead200Response := _WorkspacesGitHead200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkspacesGitHead200Response)

	if err != nil {
		return err
	}

	*o = WorkspacesGitHead200Response(varWorkspacesGitHead200Response)

	return err
}

type NullableWorkspacesGitHead200Response struct {
	value *WorkspacesGitHead200Response
	isSet bool
}

func (v NullableWorkspacesGitHead200Response) Get() *WorkspacesGitHead200Response {
	return v.value
}

func (v *NullableWorkspacesGitHead200Response) Set(val *WorkspacesGitHead200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspacesGitHead200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspacesGitHead200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspacesGitHead200Response(val *WorkspacesGitHead200Response) *NullableWorkspacesGitHead200Response {
	return &NullableWorkspacesGitHead200Response{value: val, isSet: true}
}

func (v NullableWorkspacesGitHead200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspacesGitHead200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
