// Copyright (c) Codesphere Inc.
// SPDX-License-Identifier: Apache-2.0

/*
Codesphere Public API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DomainsGetDomain200ResponseDnsEntries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainsGetDomain200ResponseDnsEntries{}

// DomainsGetDomain200ResponseDnsEntries struct for DomainsGetDomain200ResponseDnsEntries
type DomainsGetDomain200ResponseDnsEntries struct {
	A     string `json:"a"`
	Cname string `json:"cname"`
	Txt   string `json:"txt"`
}

type _DomainsGetDomain200ResponseDnsEntries DomainsGetDomain200ResponseDnsEntries

// NewDomainsGetDomain200ResponseDnsEntries instantiates a new DomainsGetDomain200ResponseDnsEntries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainsGetDomain200ResponseDnsEntries(a string, cname string, txt string) *DomainsGetDomain200ResponseDnsEntries {
	this := DomainsGetDomain200ResponseDnsEntries{}
	this.A = a
	this.Cname = cname
	this.Txt = txt
	return &this
}

// NewDomainsGetDomain200ResponseDnsEntriesWithDefaults instantiates a new DomainsGetDomain200ResponseDnsEntries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainsGetDomain200ResponseDnsEntriesWithDefaults() *DomainsGetDomain200ResponseDnsEntries {
	this := DomainsGetDomain200ResponseDnsEntries{}
	return &this
}

// GetA returns the A field value
func (o *DomainsGetDomain200ResponseDnsEntries) GetA() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.A
}

// GetAOk returns a tuple with the A field value
// and a boolean to check if the value has been set.
func (o *DomainsGetDomain200ResponseDnsEntries) GetAOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.A, true
}

// SetA sets field value
func (o *DomainsGetDomain200ResponseDnsEntries) SetA(v string) {
	o.A = v
}

// GetCname returns the Cname field value
func (o *DomainsGetDomain200ResponseDnsEntries) GetCname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cname
}

// GetCnameOk returns a tuple with the Cname field value
// and a boolean to check if the value has been set.
func (o *DomainsGetDomain200ResponseDnsEntries) GetCnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cname, true
}

// SetCname sets field value
func (o *DomainsGetDomain200ResponseDnsEntries) SetCname(v string) {
	o.Cname = v
}

// GetTxt returns the Txt field value
func (o *DomainsGetDomain200ResponseDnsEntries) GetTxt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Txt
}

// GetTxtOk returns a tuple with the Txt field value
// and a boolean to check if the value has been set.
func (o *DomainsGetDomain200ResponseDnsEntries) GetTxtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Txt, true
}

// SetTxt sets field value
func (o *DomainsGetDomain200ResponseDnsEntries) SetTxt(v string) {
	o.Txt = v
}

func (o DomainsGetDomain200ResponseDnsEntries) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainsGetDomain200ResponseDnsEntries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["a"] = o.A
	toSerialize["cname"] = o.Cname
	toSerialize["txt"] = o.Txt
	return toSerialize, nil
}

func (o *DomainsGetDomain200ResponseDnsEntries) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"a",
		"cname",
		"txt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDomainsGetDomain200ResponseDnsEntries := _DomainsGetDomain200ResponseDnsEntries{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDomainsGetDomain200ResponseDnsEntries)

	if err != nil {
		return err
	}

	*o = DomainsGetDomain200ResponseDnsEntries(varDomainsGetDomain200ResponseDnsEntries)

	return err
}

type NullableDomainsGetDomain200ResponseDnsEntries struct {
	value *DomainsGetDomain200ResponseDnsEntries
	isSet bool
}

func (v NullableDomainsGetDomain200ResponseDnsEntries) Get() *DomainsGetDomain200ResponseDnsEntries {
	return v.value
}

func (v *NullableDomainsGetDomain200ResponseDnsEntries) Set(val *DomainsGetDomain200ResponseDnsEntries) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainsGetDomain200ResponseDnsEntries) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainsGetDomain200ResponseDnsEntries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainsGetDomain200ResponseDnsEntries(val *DomainsGetDomain200ResponseDnsEntries) *NullableDomainsGetDomain200ResponseDnsEntries {
	return &NullableDomainsGetDomain200ResponseDnsEntries{value: val, isSet: true}
}

func (v NullableDomainsGetDomain200ResponseDnsEntries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainsGetDomain200ResponseDnsEntries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
