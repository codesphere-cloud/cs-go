/*
Codesphere Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TeamsGetTeam200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamsGetTeam200Response{}

// TeamsGetTeam200Response struct for TeamsGetTeam200Response
type TeamsGetTeam200Response struct {
	Id                  int            `json:"id"`
	DefaultDataCenterId int            `json:"defaultDataCenterId"`
	Name                string         `json:"name"`
	Description         NullableString `json:"description,omitempty"`
	AvatarId            NullableString `json:"avatarId,omitempty"`
	AvatarUrl           NullableString `json:"avatarUrl,omitempty"`
	IsFirst             *bool          `json:"isFirst,omitempty"`
}

type _TeamsGetTeam200Response TeamsGetTeam200Response

// NewTeamsGetTeam200Response instantiates a new TeamsGetTeam200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamsGetTeam200Response(id int, defaultDataCenterId int, name string) *TeamsGetTeam200Response {
	this := TeamsGetTeam200Response{}
	this.Id = id
	this.DefaultDataCenterId = defaultDataCenterId
	this.Name = name
	return &this
}

// NewTeamsGetTeam200ResponseWithDefaults instantiates a new TeamsGetTeam200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamsGetTeam200ResponseWithDefaults() *TeamsGetTeam200Response {
	this := TeamsGetTeam200Response{}
	return &this
}

// GetId returns the Id field value
func (o *TeamsGetTeam200Response) GetId() int {
	if o == nil {
		var ret int
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TeamsGetTeam200Response) GetIdOk() (*int, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TeamsGetTeam200Response) SetId(v int) {
	o.Id = v
}

// GetDefaultDataCenterId returns the DefaultDataCenterId field value
func (o *TeamsGetTeam200Response) GetDefaultDataCenterId() int {
	if o == nil {
		var ret int
		return ret
	}

	return o.DefaultDataCenterId
}

// GetDefaultDataCenterIdOk returns a tuple with the DefaultDataCenterId field value
// and a boolean to check if the value has been set.
func (o *TeamsGetTeam200Response) GetDefaultDataCenterIdOk() (*int, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultDataCenterId, true
}

// SetDefaultDataCenterId sets field value
func (o *TeamsGetTeam200Response) SetDefaultDataCenterId(v int) {
	o.DefaultDataCenterId = v
}

// GetName returns the Name field value
func (o *TeamsGetTeam200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TeamsGetTeam200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TeamsGetTeam200Response) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsGetTeam200Response) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsGetTeam200Response) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TeamsGetTeam200Response) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TeamsGetTeam200Response) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TeamsGetTeam200Response) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TeamsGetTeam200Response) UnsetDescription() {
	o.Description.Unset()
}

// GetAvatarId returns the AvatarId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsGetTeam200Response) GetAvatarId() string {
	if o == nil || IsNil(o.AvatarId.Get()) {
		var ret string
		return ret
	}
	return *o.AvatarId.Get()
}

// GetAvatarIdOk returns a tuple with the AvatarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsGetTeam200Response) GetAvatarIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvatarId.Get(), o.AvatarId.IsSet()
}

// HasAvatarId returns a boolean if a field has been set.
func (o *TeamsGetTeam200Response) HasAvatarId() bool {
	if o != nil && o.AvatarId.IsSet() {
		return true
	}

	return false
}

// SetAvatarId gets a reference to the given NullableString and assigns it to the AvatarId field.
func (o *TeamsGetTeam200Response) SetAvatarId(v string) {
	o.AvatarId.Set(&v)
}

// SetAvatarIdNil sets the value for AvatarId to be an explicit nil
func (o *TeamsGetTeam200Response) SetAvatarIdNil() {
	o.AvatarId.Set(nil)
}

// UnsetAvatarId ensures that no value is present for AvatarId, not even an explicit nil
func (o *TeamsGetTeam200Response) UnsetAvatarId() {
	o.AvatarId.Unset()
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TeamsGetTeam200Response) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AvatarUrl.Get()
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamsGetTeam200Response) GetAvatarUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvatarUrl.Get(), o.AvatarUrl.IsSet()
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *TeamsGetTeam200Response) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl.IsSet() {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given NullableString and assigns it to the AvatarUrl field.
func (o *TeamsGetTeam200Response) SetAvatarUrl(v string) {
	o.AvatarUrl.Set(&v)
}

// SetAvatarUrlNil sets the value for AvatarUrl to be an explicit nil
func (o *TeamsGetTeam200Response) SetAvatarUrlNil() {
	o.AvatarUrl.Set(nil)
}

// UnsetAvatarUrl ensures that no value is present for AvatarUrl, not even an explicit nil
func (o *TeamsGetTeam200Response) UnsetAvatarUrl() {
	o.AvatarUrl.Unset()
}

// GetIsFirst returns the IsFirst field value if set, zero value otherwise.
func (o *TeamsGetTeam200Response) GetIsFirst() bool {
	if o == nil || IsNil(o.IsFirst) {
		var ret bool
		return ret
	}
	return *o.IsFirst
}

// GetIsFirstOk returns a tuple with the IsFirst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamsGetTeam200Response) GetIsFirstOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFirst) {
		return nil, false
	}
	return o.IsFirst, true
}

// HasIsFirst returns a boolean if a field has been set.
func (o *TeamsGetTeam200Response) HasIsFirst() bool {
	if o != nil && !IsNil(o.IsFirst) {
		return true
	}

	return false
}

// SetIsFirst gets a reference to the given bool and assigns it to the IsFirst field.
func (o *TeamsGetTeam200Response) SetIsFirst(v bool) {
	o.IsFirst = &v
}

func (o TeamsGetTeam200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamsGetTeam200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["defaultDataCenterId"] = o.DefaultDataCenterId
	toSerialize["name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.AvatarId.IsSet() {
		toSerialize["avatarId"] = o.AvatarId.Get()
	}
	if o.AvatarUrl.IsSet() {
		toSerialize["avatarUrl"] = o.AvatarUrl.Get()
	}
	if !IsNil(o.IsFirst) {
		toSerialize["isFirst"] = o.IsFirst
	}
	return toSerialize, nil
}

func (o *TeamsGetTeam200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"defaultDataCenterId",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTeamsGetTeam200Response := _TeamsGetTeam200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTeamsGetTeam200Response)

	if err != nil {
		return err
	}

	*o = TeamsGetTeam200Response(varTeamsGetTeam200Response)

	return err
}

type NullableTeamsGetTeam200Response struct {
	value *TeamsGetTeam200Response
	isSet bool
}

func (v NullableTeamsGetTeam200Response) Get() *TeamsGetTeam200Response {
	return v.value
}

func (v *NullableTeamsGetTeam200Response) Set(val *TeamsGetTeam200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamsGetTeam200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamsGetTeam200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamsGetTeam200Response(val *TeamsGetTeam200Response) *NullableTeamsGetTeam200Response {
	return &NullableTeamsGetTeam200Response{value: val, isSet: true}
}

func (v NullableTeamsGetTeam200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamsGetTeam200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
