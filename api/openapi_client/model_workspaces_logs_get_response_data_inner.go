// Copyright (c) Codesphere Inc.
// SPDX-License-Identifier: Apache-2.0

/*
Codesphere Public API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the WorkspacesLogsGetResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspacesLogsGetResponseDataInner{}

// WorkspacesLogsGetResponseDataInner struct for WorkspacesLogsGetResponseDataInner
type WorkspacesLogsGetResponseDataInner struct {
	Timestamp time.Time `json:"timestamp"`
	Kind      string    `json:"kind"`
	Data      string    `json:"data"`
}

type _WorkspacesLogsGetResponseDataInner WorkspacesLogsGetResponseDataInner

// NewWorkspacesLogsGetResponseDataInner instantiates a new WorkspacesLogsGetResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspacesLogsGetResponseDataInner(timestamp time.Time, kind string, data string) *WorkspacesLogsGetResponseDataInner {
	this := WorkspacesLogsGetResponseDataInner{}
	this.Timestamp = timestamp
	this.Kind = kind
	this.Data = data
	return &this
}

// NewWorkspacesLogsGetResponseDataInnerWithDefaults instantiates a new WorkspacesLogsGetResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspacesLogsGetResponseDataInnerWithDefaults() *WorkspacesLogsGetResponseDataInner {
	this := WorkspacesLogsGetResponseDataInner{}
	return &this
}

// GetTimestamp returns the Timestamp field value
func (o *WorkspacesLogsGetResponseDataInner) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *WorkspacesLogsGetResponseDataInner) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *WorkspacesLogsGetResponseDataInner) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetKind returns the Kind field value
func (o *WorkspacesLogsGetResponseDataInner) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *WorkspacesLogsGetResponseDataInner) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *WorkspacesLogsGetResponseDataInner) SetKind(v string) {
	o.Kind = v
}

// GetData returns the Data field value
func (o *WorkspacesLogsGetResponseDataInner) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *WorkspacesLogsGetResponseDataInner) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *WorkspacesLogsGetResponseDataInner) SetData(v string) {
	o.Data = v
}

func (o WorkspacesLogsGetResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspacesLogsGetResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["kind"] = o.Kind
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *WorkspacesLogsGetResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"timestamp",
		"kind",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkspacesLogsGetResponseDataInner := _WorkspacesLogsGetResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkspacesLogsGetResponseDataInner)

	if err != nil {
		return err
	}

	*o = WorkspacesLogsGetResponseDataInner(varWorkspacesLogsGetResponseDataInner)

	return err
}

type NullableWorkspacesLogsGetResponseDataInner struct {
	value *WorkspacesLogsGetResponseDataInner
	isSet bool
}

func (v NullableWorkspacesLogsGetResponseDataInner) Get() *WorkspacesLogsGetResponseDataInner {
	return v.value
}

func (v *NullableWorkspacesLogsGetResponseDataInner) Set(val *WorkspacesLogsGetResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspacesLogsGetResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspacesLogsGetResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspacesLogsGetResponseDataInner(val *WorkspacesLogsGetResponseDataInner) *NullableWorkspacesLogsGetResponseDataInner {
	return &NullableWorkspacesLogsGetResponseDataInner{value: val, isSet: true}
}

func (v NullableWorkspacesLogsGetResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspacesLogsGetResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
