// Copyright (c) Codesphere Inc.
// SPDX-License-Identifier: Apache-2.0

/*
Codesphere Public API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DomainsUpdateDomain409Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainsUpdateDomain409Response{}

// DomainsUpdateDomain409Response struct for DomainsUpdateDomain409Response
type DomainsUpdateDomain409Response struct {
	Status  int     `json:"status"`
	Title   string  `json:"title"`
	Details *string `json:"details,omitempty"`
	TraceId string  `json:"traceId"`
}

type _DomainsUpdateDomain409Response DomainsUpdateDomain409Response

// NewDomainsUpdateDomain409Response instantiates a new DomainsUpdateDomain409Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainsUpdateDomain409Response(status int, title string, traceId string) *DomainsUpdateDomain409Response {
	this := DomainsUpdateDomain409Response{}
	this.Status = status
	this.Title = title
	this.TraceId = traceId
	return &this
}

// NewDomainsUpdateDomain409ResponseWithDefaults instantiates a new DomainsUpdateDomain409Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainsUpdateDomain409ResponseWithDefaults() *DomainsUpdateDomain409Response {
	this := DomainsUpdateDomain409Response{}
	return &this
}

// GetStatus returns the Status field value
func (o *DomainsUpdateDomain409Response) GetStatus() int {
	if o == nil {
		var ret int
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DomainsUpdateDomain409Response) GetStatusOk() (*int, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DomainsUpdateDomain409Response) SetStatus(v int) {
	o.Status = v
}

// GetTitle returns the Title field value
func (o *DomainsUpdateDomain409Response) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *DomainsUpdateDomain409Response) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *DomainsUpdateDomain409Response) SetTitle(v string) {
	o.Title = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *DomainsUpdateDomain409Response) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsUpdateDomain409Response) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *DomainsUpdateDomain409Response) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *DomainsUpdateDomain409Response) SetDetails(v string) {
	o.Details = &v
}

// GetTraceId returns the TraceId field value
func (o *DomainsUpdateDomain409Response) GetTraceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TraceId
}

// GetTraceIdOk returns a tuple with the TraceId field value
// and a boolean to check if the value has been set.
func (o *DomainsUpdateDomain409Response) GetTraceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TraceId, true
}

// SetTraceId sets field value
func (o *DomainsUpdateDomain409Response) SetTraceId(v string) {
	o.TraceId = v
}

func (o DomainsUpdateDomain409Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainsUpdateDomain409Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["title"] = o.Title
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	toSerialize["traceId"] = o.TraceId
	return toSerialize, nil
}

func (o *DomainsUpdateDomain409Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"title",
		"traceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDomainsUpdateDomain409Response := _DomainsUpdateDomain409Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDomainsUpdateDomain409Response)

	if err != nil {
		return err
	}

	*o = DomainsUpdateDomain409Response(varDomainsUpdateDomain409Response)

	return err
}

type NullableDomainsUpdateDomain409Response struct {
	value *DomainsUpdateDomain409Response
	isSet bool
}

func (v NullableDomainsUpdateDomain409Response) Get() *DomainsUpdateDomain409Response {
	return v.value
}

func (v *NullableDomainsUpdateDomain409Response) Set(val *DomainsUpdateDomain409Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainsUpdateDomain409Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainsUpdateDomain409Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainsUpdateDomain409Response(val *DomainsUpdateDomain409Response) *NullableDomainsUpdateDomain409Response {
	return &NullableDomainsUpdateDomain409Response{value: val, isSet: true}
}

func (v NullableDomainsUpdateDomain409Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainsUpdateDomain409Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
