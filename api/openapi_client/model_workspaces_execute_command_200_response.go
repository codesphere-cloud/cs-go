// Copyright (c) Codesphere Inc.
// SPDX-License-Identifier: Apache-2.0

/*
Codesphere Public API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WorkspacesExecuteCommand200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspacesExecuteCommand200Response{}

// WorkspacesExecuteCommand200Response struct for WorkspacesExecuteCommand200Response
type WorkspacesExecuteCommand200Response struct {
	Command    string `json:"command"`
	WorkingDir string `json:"workingDir"`
	Output     string `json:"output"`
	Error      string `json:"error"`
}

type _WorkspacesExecuteCommand200Response WorkspacesExecuteCommand200Response

// NewWorkspacesExecuteCommand200Response instantiates a new WorkspacesExecuteCommand200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspacesExecuteCommand200Response(command string, workingDir string, output string, error_ string) *WorkspacesExecuteCommand200Response {
	this := WorkspacesExecuteCommand200Response{}
	this.Command = command
	this.WorkingDir = workingDir
	this.Output = output
	this.Error = error_
	return &this
}

// NewWorkspacesExecuteCommand200ResponseWithDefaults instantiates a new WorkspacesExecuteCommand200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspacesExecuteCommand200ResponseWithDefaults() *WorkspacesExecuteCommand200Response {
	this := WorkspacesExecuteCommand200Response{}
	return &this
}

// GetCommand returns the Command field value
func (o *WorkspacesExecuteCommand200Response) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *WorkspacesExecuteCommand200Response) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *WorkspacesExecuteCommand200Response) SetCommand(v string) {
	o.Command = v
}

// GetWorkingDir returns the WorkingDir field value
func (o *WorkspacesExecuteCommand200Response) GetWorkingDir() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkingDir
}

// GetWorkingDirOk returns a tuple with the WorkingDir field value
// and a boolean to check if the value has been set.
func (o *WorkspacesExecuteCommand200Response) GetWorkingDirOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkingDir, true
}

// SetWorkingDir sets field value
func (o *WorkspacesExecuteCommand200Response) SetWorkingDir(v string) {
	o.WorkingDir = v
}

// GetOutput returns the Output field value
func (o *WorkspacesExecuteCommand200Response) GetOutput() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Output
}

// GetOutputOk returns a tuple with the Output field value
// and a boolean to check if the value has been set.
func (o *WorkspacesExecuteCommand200Response) GetOutputOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Output, true
}

// SetOutput sets field value
func (o *WorkspacesExecuteCommand200Response) SetOutput(v string) {
	o.Output = v
}

// GetError returns the Error field value
func (o *WorkspacesExecuteCommand200Response) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *WorkspacesExecuteCommand200Response) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *WorkspacesExecuteCommand200Response) SetError(v string) {
	o.Error = v
}

func (o WorkspacesExecuteCommand200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspacesExecuteCommand200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["command"] = o.Command
	toSerialize["workingDir"] = o.WorkingDir
	toSerialize["output"] = o.Output
	toSerialize["error"] = o.Error
	return toSerialize, nil
}

func (o *WorkspacesExecuteCommand200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"command",
		"workingDir",
		"output",
		"error",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkspacesExecuteCommand200Response := _WorkspacesExecuteCommand200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkspacesExecuteCommand200Response)

	if err != nil {
		return err
	}

	*o = WorkspacesExecuteCommand200Response(varWorkspacesExecuteCommand200Response)

	return err
}

type NullableWorkspacesExecuteCommand200Response struct {
	value *WorkspacesExecuteCommand200Response
	isSet bool
}

func (v NullableWorkspacesExecuteCommand200Response) Get() *WorkspacesExecuteCommand200Response {
	return v.value
}

func (v *NullableWorkspacesExecuteCommand200Response) Set(val *WorkspacesExecuteCommand200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspacesExecuteCommand200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspacesExecuteCommand200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspacesExecuteCommand200Response(val *WorkspacesExecuteCommand200Response) *NullableWorkspacesExecuteCommand200Response {
	return &NullableWorkspacesExecuteCommand200Response{value: val, isSet: true}
}

func (v NullableWorkspacesExecuteCommand200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspacesExecuteCommand200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
