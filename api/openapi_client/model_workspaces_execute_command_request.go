// Copyright (c) Codesphere Inc.
// SPDX-License-Identifier: Apache-2.0

/*
Codesphere Public API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WorkspacesExecuteCommandRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspacesExecuteCommandRequest{}

// WorkspacesExecuteCommandRequest struct for WorkspacesExecuteCommandRequest
type WorkspacesExecuteCommandRequest struct {
	Command    string             `json:"command"`
	WorkingDir *string            `json:"workingDir,omitempty"`
	Env        *map[string]string `json:"env,omitempty"`
}

type _WorkspacesExecuteCommandRequest WorkspacesExecuteCommandRequest

// NewWorkspacesExecuteCommandRequest instantiates a new WorkspacesExecuteCommandRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspacesExecuteCommandRequest(command string) *WorkspacesExecuteCommandRequest {
	this := WorkspacesExecuteCommandRequest{}
	this.Command = command
	return &this
}

// NewWorkspacesExecuteCommandRequestWithDefaults instantiates a new WorkspacesExecuteCommandRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspacesExecuteCommandRequestWithDefaults() *WorkspacesExecuteCommandRequest {
	this := WorkspacesExecuteCommandRequest{}
	return &this
}

// GetCommand returns the Command field value
func (o *WorkspacesExecuteCommandRequest) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *WorkspacesExecuteCommandRequest) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *WorkspacesExecuteCommandRequest) SetCommand(v string) {
	o.Command = v
}

// GetWorkingDir returns the WorkingDir field value if set, zero value otherwise.
func (o *WorkspacesExecuteCommandRequest) GetWorkingDir() string {
	if o == nil || IsNil(o.WorkingDir) {
		var ret string
		return ret
	}
	return *o.WorkingDir
}

// GetWorkingDirOk returns a tuple with the WorkingDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspacesExecuteCommandRequest) GetWorkingDirOk() (*string, bool) {
	if o == nil || IsNil(o.WorkingDir) {
		return nil, false
	}
	return o.WorkingDir, true
}

// HasWorkingDir returns a boolean if a field has been set.
func (o *WorkspacesExecuteCommandRequest) HasWorkingDir() bool {
	if o != nil && !IsNil(o.WorkingDir) {
		return true
	}

	return false
}

// SetWorkingDir gets a reference to the given string and assigns it to the WorkingDir field.
func (o *WorkspacesExecuteCommandRequest) SetWorkingDir(v string) {
	o.WorkingDir = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *WorkspacesExecuteCommandRequest) GetEnv() map[string]string {
	if o == nil || IsNil(o.Env) {
		var ret map[string]string
		return ret
	}
	return *o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspacesExecuteCommandRequest) GetEnvOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Env) {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *WorkspacesExecuteCommandRequest) HasEnv() bool {
	if o != nil && !IsNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given map[string]string and assigns it to the Env field.
func (o *WorkspacesExecuteCommandRequest) SetEnv(v map[string]string) {
	o.Env = &v
}

func (o WorkspacesExecuteCommandRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspacesExecuteCommandRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["command"] = o.Command
	if !IsNil(o.WorkingDir) {
		toSerialize["workingDir"] = o.WorkingDir
	}
	if !IsNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	return toSerialize, nil
}

func (o *WorkspacesExecuteCommandRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"command",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkspacesExecuteCommandRequest := _WorkspacesExecuteCommandRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkspacesExecuteCommandRequest)

	if err != nil {
		return err
	}

	*o = WorkspacesExecuteCommandRequest(varWorkspacesExecuteCommandRequest)

	return err
}

type NullableWorkspacesExecuteCommandRequest struct {
	value *WorkspacesExecuteCommandRequest
	isSet bool
}

func (v NullableWorkspacesExecuteCommandRequest) Get() *WorkspacesExecuteCommandRequest {
	return v.value
}

func (v *NullableWorkspacesExecuteCommandRequest) Set(val *WorkspacesExecuteCommandRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspacesExecuteCommandRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspacesExecuteCommandRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspacesExecuteCommandRequest(val *WorkspacesExecuteCommandRequest) *NullableWorkspacesExecuteCommandRequest {
	return &NullableWorkspacesExecuteCommandRequest{value: val, isSet: true}
}

func (v NullableWorkspacesExecuteCommandRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspacesExecuteCommandRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
